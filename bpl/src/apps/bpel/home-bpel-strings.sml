(*******************************)
(*     String Declarations     *)
(*******************************)
val Process        = "Process"
val Instance       = "Instance"
(*val SubProcesses   = "SubProcesses"*)
(*val SubProcess     = "SubProcess"*)
val Instances      = "Instances"
(*val Instances   = "Instances"*)
(*val SubInstance    = "SubInstance"*)
(*val FrozenSub      = "FrozenSub"*)
val Scope          = "Scope"
val ActiveScope    = "ActiveScope"
val Invoked        = "Invoked"
val Running        = "Running"
val Freezing       = "Freezing"
val Stopped        = "Stopped"
val TopInstance    = "TopInstance"
val TopRunning     = "TopRunning"
val SubTransition  = "SubTransition"
val Variables      = "Variables"
val Variable       = "Variable"
val VariableRef    = "VariableRef" 
val Sequence       = "Sequence"
val Next           = "Next"
val Flow           = "Flow"
val While          = "While"
val If             = "If"
val Condition      = "Condition"
val Then           = "Then"
val Else           = "Else"
val True           = "True"
val False          = "False"
val Assign         = "Assign"
val Copy           = "Copy"
val To             = "To"
val From           = "From"
val ToPLink        = "ToPLink"
val FromPLink      = "FromPLink"
val Exit           = "Exit"
val PartnerLinks   = "PartnerLinks"    
val PartnerLink    = "PartnerLink"
val SubLinks       = "SubLinks"
val SubLink        = "SubLink"
val FrozenSupLink  = "FrozenSupLink"
val Message        = "Message"
val Link           = "Link"
val CreateInstance = "CreateInstance"
val Invoke         = "Invoke"
val Receive        = "Receive"
val Reply          = "Reply"
val ReplyTo        = "ReplyTo"
val GetReply       = "GetReply"
val InvokeSub      = "InvokeSub"
val ReceiveSub     = "ReceiveSub"
val ReplySub       = "ReplySub"
val GetReplySub    = "GetReplySub"
val InvokeSup      = "InvokeSup"
val ReceiveSup     = "ReceiveSup"
val ReplySup       = "ReplySup"
val GetReplySup    = "GetReplySup"
val FreezeSub      = "FreezeSub"
val FreezingSub    = "FreezingSub"
val ThawSub        = "ThawSub"

(*    For names                *)
val inst_id                    = "inst_id"
val inst_id1                   = "inst_id1"
val inst_id2                   = "inst_id2"
val inst_id3                   = "inst_id3"
val inst_id4                   = "inst_id4"
val inst_id_invoker            = "inst_id_invoker"
val inst_id_invoked            = "inst_id_invoked"
val inst_id_invoked1           = "inst_id_invoked1"
val inst_id_invoked2           = "inst_id_invoked2"
val inst_id_top                = "inst_id_top"
val inst_id_top_invoker        = "inst_id_top_invoker"
val inst_id_top_invoked        = "inst_id_top_invoked"
val inst_id_sup                = "inst_id_sup"
val inst_id_sub                = "inst_id_sub"
val scope                      = "scope"
val scope1                     = "scope1"
val scope2                     = "scope2"
val scope3                     = "scope3"
val scope4                     = "scope4"
val active_scopes              = "active_scopes"
val active_scopes_invoker      = "active_scopes_invoker"
val active_scopes_invoked      = "active_scopes_invoked"
val active_scopes_sup          = "active_scopes_sup"
val active_scopes_sub          = "active_scopes_sub"
val active_sub_scopes          = "active_sub_scopes"
val scopes_invoked             = "scopes_invoked"
val scopes_invoker             = "scopes_invoker"
val f                          = "f"
val t                          = "t"
val name                       = "name"
val proc_name                  = "proc_name"
val sub_name                   = "sub_name"
val var                        = "var"
val var_scope                  = "var_scope"
val outvar                     = "outvar"
val outvar_scope               = "outvar_scope"
val invar                      = "invar"
val invar_scope                = "invar_scope"
val oper                       = "oper"
val partner_link               = "partner_link"
val partner_link_invoker       = "partner_link_invoker"
val partner_link_invoked       = "partner_link_invoked"
val partner_link_scope         = "partner_link_scope"
val partner_link_scope_invoker = "partner_link_scope_invoker"
val partner_link_scope_invoked = "partner_link_scope_invoked"
val sub                        = "sub"
val sub_scope                  = "sub_scope"
val sub_link                   = "sub_link"
val sub_link_scope             = "sub_link_scope"
val echo                       = "echo"
val echo_id                    = "echo_id"
val echo_process               = "echo_process"
val echo_value                 = "echo_value"
val echo_service               = "echo_service"
val echo_client                = "echo_client"
val x                          = "x"
val y                          = "y"
val z                          = "z"
val v                          = "v"
val caller                     = "caller"
val caller_id                  = "caller_id"


(* NEW PART *)
val doctor_hired               = "doctor_hired"
val doctor_id                  = "doctor_id"
val doctor                     = "doctor"
val doctor_scope               = "doctor_scope"
val parent                     = "parent"
val parent_active_scopes       = "parent_active_scopes"
val surgery_id                 = "surgery_id"
val surgery                    = "surgery"
val surgery_scope              = "surgery_scope"
val patient                    = "patient"
val patient_scope              = "patient_scope"
val out                        = "out"
val run                        = "run"
val hospital_id                = "hospital_id"
val hospital                   = "hospital"
val treatment                  = "treatment"
val engine_id                  = "engine_id"
val active_scopes              = "active_scopes"
val perform_treatment          = "perform_treatment"



