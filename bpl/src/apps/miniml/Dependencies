# Copyright (c) 2006  The BPL Group at the IT University of Copenhagen
#
# This file is part of BPL.
#
# BPL is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# BPL is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with BPL; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
# USA
#

# INCLUDE=../../kernel
# INCLUDE=../../lib/coll
# INCLUDE=../../lib/pp/mak
# INCLUDE=../../lib/util
# MLton: $(SML_LIB)/mlyacc-lib/mlyacc-lib.mlb

# AST
pattern-sig: /lib/coll/set /lib/pp/mak/.
pattern: pattern-sig /lib/coll/set /lib/pp/mak/. /lib/util/util %NODASHSIG
miniml-sig: /lib/pp/mak/.
miniml: miniml-sig pattern /lib/pp/mak/. + /lib/util/util /lib/coll/map
   /lib/util/flags %NODASHSIG

# Parsing / lexing
source:
miniml.grm-sig: /lib/ml-yacc/.
miniml.lex: /lib/compat/mosml/. miniml.grm-sig source /lib/pp/mak/. /lib/util/sourceloc
miniml.grm: miniml.grm-sig miniml pattern source /lib/pp/mak/. /lib/util/sourceloc
   /lib/ml-yacc/. /lib/compat/mosml/. /lib/util/util /lib/util/flags %NODASHSIG
minimlparser-sig: pattern miniml
minimlparser: minimlparser-sig miniml miniml.lex miniml.grm pattern source
   /lib/util/sourceloc /lib/ml-yacc/. /lib/pp/mak/. /lib/util/flags /lib/util/dump
   %NODASHSIG
matchcompiler-sig: pattern miniml
matchcompiler: matchcompiler-sig miniml pattern 
   /lib/pp/mak/. /lib/util/util /lib/coll/set
   /lib/util/flags /lib/util/dump %NODASHSIG
desugar-sig: miniml pattern
desugar: desugar-sig miniml pattern /lib/coll/map /lib/util/util %NODASHSIG

# Type inference
typeexp-sig: miniml /lib/pp/mak/.
typeexp: typeexp-sig miniml pattern /lib/util/uref /lib/util/util /lib/pp/mak/.
   /lib/coll/map /lib/coll/set /lib/compat/common/legacyarray %NODASHSIG
typeinference-sig: typeexp pattern miniml
typeinference: typeinference-sig miniml pattern typeexp
   /lib/coll/set /lib/coll/map /lib/pp/mak/. /lib/util/util
   /lib/util/flags /lib/util/dump 
   %NODASHSIG

# Code generation
bggen-sig: miniml
bggen: bggen-sig miniml /kernel/bg/name /kernel/bgadt-sig
   /kernel/ast/bgbdnf-sig /lib/pp/smlnj/. /lib/coll/set /lib/coll/map
   /lib/util/util %NODASHSIG
mml2bg-sig: /lib/pp/mak/.
mml2bg: mml2bg-sig miniml minimlparser pattern desugar matchcompiler
   typeinference typeexp bggen-sig /kernel/bgadt-sig /kernel/ast/bgval
   /lib/pp/smlnj/. /lib/pp/mak/. /lib/util/flags /lib/util/sourceloc
   /lib/util/util /lib/util/dump /lib/util/timings %NODASHSIG

# Main program
bplc: %PROGRAM bggen mml2bg /kernel/bg 
   /lib/pp/smlnj/. /lib/util/flags /lib/util/argparse /lib/pp/mak/.
   /lib/util/timings /lib/util/origin /lib/util/printerrorhandler

# Trying out the matching functionality with K-L-M example.
tryit: %PROGRAM /kernel/match /kernel/bg
