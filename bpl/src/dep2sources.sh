#! /bin/sh
# Copyright (c) 2006  The BPL Group at the IT University of Copenhagen
#
# This file is part of BPL.
#
# BPL is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# BPL is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with BPL; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
# USA

# $Date$

# Description: dep2sources generates *.cm-files for the Compilation Manager
#              of SMLNJ, based on Dependencies files of Mosmake

progname="$0"
debug=

usage () {
  echo "Usage: $progname [ OPTION .. OPTION ] [ DEPENDENCIESFILE ] [ CMFILE ]"
  echo "  Options (defaults in parentheses):"
  echo "    -i, --input=DEPENDENCIESFILE  Get input from DEPENDENCIESFILE (Dependencies)"
  echo "    -o, --output=CMFILE           Write output to CMFILE (sources.cm)"
  echo "    -r, --root=DIR                Root is DIR (\$bplroot)"
  echo "    -c, --change=SRC=DST          Change SRC to DST in references to .cm files"
  echo "    -x, --exclude=DIR             Exclude references to DIR (after any changes)"
  echo "    --help                        Show this usage info"
#  echo "  Use - for stdin or stdout"
  echo "Example:"
  echo "  $progname --root='\$projectroot' --change=/lib/compat/mosml=/lib/compat/smlnj --exclude=/lib/compat/mlton"
  exit $1
}

debug () {
	if [ -n "$debug" ]
	then
		echo "$*" 1>&2
	fi
}

# Parse command line switches

inputfile=Dependencies
outputfile=sources.cm
rootdir='$bplroot'
sources_cm=sources.cm
excludedirs=NoNoCuRrInGwOrD
changes=

change=
excludedir=
nextdefaultarg=inputfile
nextarg=
next="$1"
while [ -n "$next" ]
do
	if [ -n "$nextarg" ]
	then
		eval $nextarg="$next"
		shift
		next="$1"
		if [ $nextarg = excludedir ]
		then
			excludedirs="$excludedirs\|$excludedir"
		elif [ $nextarg = change ]
		then
			changes="$changes -e s=${change}=g"
		fi
		nextarg=
	else
		rest=
	    case "$next" in
    	-i*)
    		rest=${1#-i}
		    nextarg=inputfile;;	
    	--input=*)
    		rest=${1#--input=}
		    nextarg=inputfile;;
    	--input)
		    nextarg=inputfile;;
	    -o*)
		    rest=${1#-o}
			nextarg=outputfile;;
		--output=*)
			rest=${1#--output=}
			nextarg=outputfile;;
		--output)
			nextarg=outputfile;;
		-x*)
			rest=${1#-x}
			nextarg=excludedir;;
    	--exclude=*)
			rest=${1#--exclude=}
			nextarg=excludedir;;
    	--exclude)
			nextarg=excludedir;;
		-r*)
			rest=${1#-r}
			nextarg=rootdir;;
    	--root=*)
			rest=${1#--root=}
			nextarg=rootdir;;
    	--root)
			nextarg=rootdir;;
		-c*)
			rest=${1#-c}
			nextarg=change;;
    	--change=*)
			rest=${1#--change=}
			nextarg=change;;
    	--change)
			nextarg=change;;
    	--help)
    		usage 0;;
    	*)
    		eval $nextdefaultarg="$1"
			nextdefaultarg=outputfile
		esac	
		if [ -z "$rest" ]
		then
			shift
			next="$1"
		else
			next="$rest"
		fi
	fi
done

debug "inputfile = '$inputfile'"
debug "outputfile = '$outputfile'"
debug "excludedirs = '$excludedirs'"
debug "changes = '$changes'"

# Generate *.cm file from Dependencies file

echo "(* Autogenerated---do NOT edit *)" > $outputfile
echo "Group" >> $outputfile
echo "is" >> $outputfile
sed -n \
	-e '/^[^:#]*\.\(lex\|grm\)-sig:/  b;' \
	-e '/^[^:#]*\.\(lex\|grm\):/      { s/:.*//; p; b; }' \
	-e '/^[^.#]*:/                 { s/:.*/.sml/; p; }' \
	< $inputfile >> $outputfile
echo " " >> $outputfile
sed -n \
	-e '/^ *[^#][^=]*$/ { s/^\([^:]*:\)*[ \t]*//; s/\r//g; ' \
	-e '  :repeat h; s/ .*//; s+\(/[^/]*$\)+\1+p; g; s/^[^ ][^ ]* *//; t repeat;' \
	-e '}' \
 < $inputfile | sed -e y/// $changes -e 't replroot' -e "s+/[^/]*\$+/$sources_cm+" -e :replroot -e "s+^/+$rootdir/+" \
 | sort | uniq | grep -v -e "\($excludedirs\)\(/.*\)*/sources.cm" \
 >> $outputfile
true # exit with status code 0
# | sed -e "s+^/+$rootdir/+; s+/\\([^/]\\|[^/][^/]\\|[^/]*\\([^./][^/][^/]\\|\\.[^c/][^/]\\|\\.c[^m/]\\)\\)\$+/$sources_cm+" \
