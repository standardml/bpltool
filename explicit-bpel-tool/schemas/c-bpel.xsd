<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
    elementFormDefault="qualified"
    blockDefault="#all"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    targetNamespace="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      This is the schema for Core BPEL, a subset of WS-BPEL.  This
      Schema is a modified version of the original WS-BPEL XML Schema,
      excluding implicit activities, extensions and making default
      values mandatory.
    </xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace"
              schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xsd:element type="tProcess" name="process">
    <xsd:annotation>
      <xsd:documentation>
        This is the root element for a Core BPEL process.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="tProcess">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="import"/>
      <xsd:element minOccurs="1" ref="scope"/>
    </xsd:sequence>
    <xsd:attribute use="required" type="xsd:NCName" name="name"/>
    <xsd:attribute use="required" type="xsd:anyURI" name="targetNamespace"/>
  </xsd:complexType>
  <xsd:group name="activity">
    <xsd:annotation>
      <xsd:documentation>
        All Core BPEL activities in alphabetical order.
        Basic activities and structured activities. Addtional
        constraints: - rethrow activity can be used ONLY within a
        fault handler (i.e. "catch" and "catchAll" element) -
        compensate or compensateScope activity can be used ONLY within
        a fault handler, a compensation handler or a termination
        handler
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="assign"/>
      <xsd:element ref="compensate"/>
      <xsd:element ref="compensateScope"/>
      <xsd:element ref="empty"/>
      <xsd:element ref="exit"/>
      <xsd:element ref="flow"/>
      <xsd:element ref="forEach"/>
      <xsd:element ref="if"/>
      <xsd:element ref="invoke"/>
      <xsd:element ref="pick"/>
      <xsd:element ref="repeatUntil"/>
      <xsd:element ref="reply"/>
      <xsd:element ref="rethrow"/>
      <xsd:element ref="scope"/>
      <xsd:element ref="throw"/>
      <xsd:element ref="validate"/>
      <xsd:element ref="wait"/>
    </xsd:choice>
  </xsd:group>
  <xsd:element type="tImport" name="import"/>
  <xsd:complexType name="tImport">
    <xsd:attribute use="optional" type="xsd:anyURI" name="namespace"/>
    <xsd:attribute use="optional" type="xsd:anyURI" name="location"/>
    <xsd:attribute use="required" type="xsd:anyURI" name="importType"/>
  </xsd:complexType>
  <xsd:element type="tPartnerLinks" name="partnerLinks"/>
  <xsd:complexType name="tPartnerLinks">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="partnerLink"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tPartnerLink" name="partnerLink"/>
  <xsd:complexType name="tPartnerLink">
    <xsd:attribute use="required" type="xsd:NCName" name="name"/>
    <xsd:attribute use="required" type="xsd:QName" name="partnerLinkType"/>
    <xsd:attribute type="xsd:NCName" name="myRole"/>
    <xsd:attribute type="xsd:NCName" name="partnerRole"/>
    <xsd:attribute type="tBoolean" name="initializePartnerRole"/>
  </xsd:complexType>
  <xsd:element type="tMessageExchanges" name="messageExchanges"/>
  <xsd:complexType name="tMessageExchanges">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="messageExchange"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tMessageExchange" name="messageExchange"/>
  <xsd:complexType name="tMessageExchange">
    <xsd:attribute use="required" type="xsd:NCName" name="name"/>
  </xsd:complexType>
  <xsd:element type="tVariables" name="variables"/>
  <xsd:complexType name="tVariables">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="variable"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tVariable" name="variable"/>
  <xsd:complexType name="tVariable">
    <xsd:attribute use="required" type="BPELVariableName" name="name"/>
    <xsd:attribute use="optional" type="xsd:QName" name="messageType"/>
    <xsd:attribute use="optional" type="xsd:QName" name="type"/>
    <xsd:attribute use="optional" type="xsd:QName" name="element"/>
  </xsd:complexType>
  <xsd:simpleType name="BPELVariableName">
    <xsd:restriction base="xsd:NCName">
      <xsd:pattern value="[^\.]+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element type="tCorrelationSets" name="correlationSets"/>
  <xsd:complexType name="tCorrelationSets">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="correlationSet"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tCorrelationSet" name="correlationSet"/>
  <xsd:complexType name="tCorrelationSet">
    <xsd:attribute use="required" type="QNames" name="properties"/>
    <xsd:attribute use="required" type="xsd:NCName" name="name"/>
  </xsd:complexType>
  <xsd:simpleType name="QNames">
    <xsd:restriction>
      <xsd:simpleType>
        <xsd:list itemType="xsd:QName"/>
      </xsd:simpleType>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element type="tFaultHandlers" name="faultHandlers"/>
  <xsd:complexType name="tFaultHandlers">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="catch"/>
      <xsd:element minOccurs="0" ref="catchAll"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tCatch" name="catch">
    <xsd:annotation>
      <xsd:documentation>
        This element can contain all activities including the
        activities compensate, compensateScope and rethrow.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="tCatch">
    <xsd:complexContent>
      <xsd:extension base="tActivityContainer">
        <xsd:attribute type="xsd:QName" name="faultName"/>
        <xsd:attribute type="BPELVariableName" name="faultVariable"/>
        <xsd:attribute type="xsd:QName" name="faultMessageType"/>
        <xsd:attribute type="xsd:QName" name="faultElement"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element type="tActivityContainer" name="catchAll">
    <xsd:annotation>
      <xsd:documentation>
        This element can contain all activities including the
        activities compensate, compensateScope and rethrow.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="tActivityContainer">
    <xsd:sequence>
      <xsd:group ref="activity"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tEventHandlers" name="eventHandlers"/>
  <xsd:complexType name="tEventHandlers">
    <xsd:annotation>
      <xsd:documentation>
        XSD Authors: The child element onAlarm needs to be a Local
        Element Declaration, because there is another onAlarm element
        defined for the pick activity.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="onEvent"/>
      <xsd:element maxOccurs="unbounded" type="tOnAlarmEvent"
                   minOccurs="0" name="onAlarm"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tOnEvent" name="onEvent"/>
  <xsd:complexType name="tOnEvent">
    <xsd:complexContent>
      <xsd:extension base="tOnMsgCommon">
        <xsd:sequence>
          <xsd:element ref="scope"/>
        </xsd:sequence>
        <xsd:attribute use="optional" type="xsd:QName" name="messageType"/>
        <xsd:attribute use="optional" type="xsd:QName" name="element"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tOnMsgCommon">
    <xsd:annotation>
      <xsd:documentation>
        XSD Authors: The child element correlations needs to be a
        Local Element Declaration, because there is another
        correlations element defined for the invoke activity.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element type="tCorrelations" minOccurs="0" name="correlations"/>
      <xsd:element minOccurs="0" ref="fromParts"/>
    </xsd:sequence>
    <xsd:attribute use="required" type="xsd:NCName" name="partnerLink"/>
    <xsd:attribute use="required" type="xsd:NCName" name="operation"/>
    <xsd:attribute use="optional" type="xsd:NCName" name="messageExchange"/>
    <xsd:attribute use="optional" type="BPELVariableName" name="variable"/>
  </xsd:complexType>
  <xsd:complexType name="tCorrelations">
    <xsd:annotation>
      <xsd:documentation>
        XSD Authors: The child element correlation needs to be a Local
        Element Declaration, because there is another correlation
        element defined for the invoke activity.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" type="tCorrelation"
                   name="correlation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="tCorrelation">
    <xsd:attribute use="required" type="xsd:NCName" name="set"/>
    <xsd:attribute default="no" type="tInitiate" name="initiate"/>
  </xsd:complexType>
  <xsd:simpleType name="tInitiate">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="yes"/>
      <xsd:enumeration value="join"/>
      <xsd:enumeration value="no"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="tOnAlarmEvent">
    <xsd:sequence>
      <xsd:choice>
        <xsd:sequence>
          <xsd:group ref="forOrUntilGroup"/>
          <xsd:element minOccurs="0" ref="repeatEvery"/>
        </xsd:sequence>
        <xsd:element ref="repeatEvery"/>
      </xsd:choice>
      <xsd:element ref="scope"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="forOrUntilGroup">
    <xsd:choice>
      <xsd:element ref="for"/>
      <xsd:element ref="until"/>
    </xsd:choice>
  </xsd:group>
  <xsd:element type="tDuration-expr" name="for"/>
  <xsd:element type="tDeadline-expr" name="until"/>
  <xsd:element type="tDuration-expr" name="repeatEvery"/>
  <xsd:element type="tTargets" name="targets"/>
  <xsd:complexType name="tTargets">
    <xsd:sequence>
      <xsd:element minOccurs="1" ref="joinCondition"/>
      <xsd:element maxOccurs="unbounded" ref="target"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tCondition" name="joinCondition"/>
  <xsd:element type="tTarget" name="target"/>
  <xsd:complexType name="tTarget">
    <xsd:attribute use="required" type="xsd:NCName" name="linkName"/>
  </xsd:complexType>
  <xsd:element type="tSources" name="sources"/>
  <xsd:complexType name="tSources">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="source"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tSource" name="source"/>
  <xsd:complexType name="tSource">
    <xsd:sequence>
      <xsd:element minOccurs="1" ref="transitionCondition"/>
    </xsd:sequence>
    <xsd:attribute use="required" type="xsd:NCName" name="linkName"/>
  </xsd:complexType>
  <xsd:element type="tCondition" name="transitionCondition"/>
  <xsd:element type="tAssign" name="assign"/>
  <xsd:complexType name="tAssign">
    <xsd:sequence>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element ref="copy"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute use="optional" default="no"
                   type="tBoolean" name="validate"/>
  </xsd:complexType>
  <xsd:element type="tCopy" name="copy"/>
  <xsd:complexType name="tCopy">
    <xsd:sequence>
      <xsd:element ref="from"/>
      <xsd:element ref="to"/>
    </xsd:sequence>
    <xsd:attribute use="optional" type="tBoolean"
                   name="keepSrcElementName"/>
    <xsd:attribute use="optional" default="no" type="tBoolean"
                   name="ignoreMissingFromData"/>
  </xsd:complexType>
  <xsd:element type="tFrom" name="from"/>
  <xsd:complexType mixed="true" name="tFrom">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element ref="literal"/>
        <xsd:element ref="query"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute fixed="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                   type="xsd:anyURI" name="expressionLanguage"/>
    <xsd:attribute type="BPELVariableName" name="variable"/>
    <xsd:attribute type="xsd:NCName" name="part"/>
    <xsd:attribute type="xsd:QName" name="property"/>
    <xsd:attribute type="xsd:NCName" name="partnerLink"/>
    <xsd:attribute type="tRoles" name="endpointReference"/>
  </xsd:complexType>
  <xsd:element type="tLiteral" name="literal"/>
  <xsd:complexType mixed="true" name="tLiteral">
    <xsd:sequence>
      <xsd:any namespace="##any" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tQuery" name="query"/>
  <xsd:complexType name="tQuery">
    <xsd:simpleContent>
      <xsd:extension base="xpath">
        <xsd:attribute fixed="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                       type="xsd:anyURI" name="queryLanguage"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="tRoles">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="myRole"/>
      <xsd:enumeration value="partnerRole"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element type="tTo" name="to"/>
  <xsd:complexType mixed="true" name="tTo">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="query"/>
    </xsd:sequence>
    <xsd:attribute fixed="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                   type="xsd:anyURI" name="expressionLanguage"/>
    <xsd:attribute type="BPELVariableName" name="variable"/>
    <xsd:attribute type="xsd:NCName" name="part"/>
    <xsd:attribute type="xsd:QName" name="property"/>
    <xsd:attribute type="xsd:NCName" name="partnerLink"/>
  </xsd:complexType>
  <xsd:element type="tCompensate" name="compensate"/>
  <xsd:complexType name="tCompensate"/>
  <xsd:element type="tCompensateScope" name="compensateScope"/>
  <xsd:complexType name="tCompensateScope">
    <xsd:attribute use="required" type="xsd:NCName" name="target"/>
  </xsd:complexType>
  <xsd:element type="tEmpty" name="empty"/>
  <xsd:complexType name="tEmpty"/>
  <xsd:element type="tExit" name="exit"/>
  <xsd:complexType name="tExit"/>
  <xsd:element type="tFlow" name="flow"/>
  <xsd:complexType name="tFlow">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="links"/>
      <xsd:group maxOccurs="unbounded" ref="activity"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tLinks" name="links"/>
  <xsd:complexType name="tLinks">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="link"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tLink" name="link"/>
  <xsd:complexType name="tLink">
    <xsd:attribute use="required" type="xsd:NCName" name="name"/>
  </xsd:complexType>
  <xsd:element type="tForEach" name="forEach"/>
  <xsd:complexType name="tForEach">
    <xsd:sequence>
      <xsd:element ref="startCounterValue"/>
      <xsd:element ref="finalCounterValue"/>
      <xsd:element minOccurs="0" ref="completionCondition"/>
      <xsd:element ref="scope"/>
    </xsd:sequence>
    <xsd:attribute use="required"
                   type="BPELVariableName" name="counterName"/>
    <xsd:attribute use="required" type="tBoolean" name="parallel"/>
  </xsd:complexType>
  <xsd:element type="tExpression" name="startCounterValue"/>
  <xsd:element type="tExpression" name="finalCounterValue"/>
  <xsd:element type="tCompletionCondition" name="completionCondition"/>
  <xsd:complexType name="tCompletionCondition">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="branches"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tBranches" name="branches"/>
  <xsd:complexType name="tBranches">
    <xsd:complexContent>
      <xsd:extension base="tExpression">
        <xsd:attribute default="no" type="tBoolean"
                       name="successfulBranchesOnly"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element type="tIf" name="if"/>
  <xsd:complexType name="tIf">
    <xsd:sequence>
      <xsd:element ref="condition"/>
      <xsd:group ref="activity"/>
      <xsd:element ref="else"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tActivityContainer" name="else"/>
  <xsd:element type="tInvoke" name="invoke"/>
  <xsd:complexType name="tInvoke">
    <xsd:annotation>
      <xsd:documentation>
        XSD Authors: The child element correlations needs to be a
        Local Element Declaration, because there is another
        correlations element defined for the non-invoke activities.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element type="tCorrelationsWithPattern" minOccurs="0"
                   name="correlations"/>
    </xsd:sequence>
    <xsd:attribute use="required" type="xsd:NCName" name="partnerLink"/>
    <xsd:attribute use="required" type="xsd:NCName" name="operation"/>
    <xsd:attribute use="optional" type="BPELVariableName"
                   name="inputVariable"/>
    <xsd:attribute use="optional" type="BPELVariableName"
                   name="outputVariable"/>
  </xsd:complexType>
  <xsd:complexType name="tCorrelationsWithPattern">
    <xsd:annotation>
      <xsd:documentation>
        XSD Authors: The child element correlation needs to be a Local
        Element Declaration, because there is another correlation
        element defined for the non-invoke activities.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" type="tCorrelationWithPattern"
                   name="correlation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="tCorrelationWithPattern">
    <xsd:complexContent>
      <xsd:extension base="tCorrelation">
        <xsd:attribute type="tPattern" name="pattern"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="tPattern">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="request"/>
      <xsd:enumeration value="response"/>
      <xsd:enumeration value="request-response"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element type="tFromParts" name="fromParts"/>
  <xsd:complexType name="tFromParts">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="fromPart"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tFromPart" name="fromPart"/>
  <xsd:complexType name="tFromPart">
    <xsd:attribute use="required" type="xsd:NCName" name="part"/>
    <xsd:attribute use="required" type="BPELVariableName" name="toVariable"/>
  </xsd:complexType>
  <xsd:element type="tToParts" name="toParts"/>
  <xsd:complexType name="tToParts">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="toPart"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tToPart" name="toPart"/>
  <xsd:complexType name="tToPart">
    <xsd:attribute use="required" type="xsd:NCName" name="part"/>
    <xsd:attribute use="required" type="BPELVariableName" name="fromVariable"/>
  </xsd:complexType>
  <xsd:element type="tPick" name="pick"/>
  <xsd:complexType name="tPick">
    <xsd:annotation>
      <xsd:documentation>
        XSD Authors: The child element onAlarm needs to be a Local
        Element Declaration, because there is another onAlarm element
        defined for event handlers.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="onMessage"/>
      <xsd:element maxOccurs="unbounded" type="tOnAlarmPick" minOccurs="0"
                   name="onAlarm"/>
    </xsd:sequence>
    <xsd:attribute default="no" type="tBoolean" name="createInstance"/>
  </xsd:complexType>
  <xsd:element type="tOnMessage" name="onMessage"/>
  <xsd:complexType name="tOnMessage">
    <xsd:complexContent>
      <xsd:extension base="tOnMsgCommon">
        <xsd:sequence>
          <xsd:group ref="activity"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tOnAlarmPick">
    <xsd:sequence>
      <xsd:group ref="forOrUntilGroup"/>
      <xsd:group ref="activity"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tRepeatUntil" name="repeatUntil"/>
  <xsd:complexType name="tRepeatUntil">
    <xsd:sequence>
      <xsd:group ref="activity"/>
      <xsd:element ref="condition"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element type="tReply" name="reply"/>
  <xsd:complexType name="tReply">
    <xsd:annotation>
      <xsd:documentation>
        XSD Authors: The child element correlations needs to be a
        Local Element Declaration, because there is another
        correlations element defined for the invoke activity.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element type="tCorrelations" minOccurs="0" name="correlations"/>
    </xsd:sequence>
    <xsd:attribute use="required" type="xsd:NCName" name="partnerLink"/>
    <xsd:attribute use="required" type="xsd:NCName" name="operation"/>
    <xsd:attribute use="optional" type="BPELVariableName" name="variable"/>
    <xsd:attribute type="xsd:QName" name="faultName"/>
    <xsd:attribute use="optional" type="xsd:NCName" name="messageExchange"/>
  </xsd:complexType>
  <xsd:element type="tRethrow" name="rethrow"/>
  <xsd:complexType name="tRethrow"/>
  <xsd:element type="tScope" name="scope"/>
  <xsd:complexType name="tScope">
    <xsd:annotation>
      <xsd:documentation>
        There is no schema-level default for "exitOnStandardFault" at
        "scope". Because, it will inherit default from enclosing scope
        or process.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="targets"/>
      <xsd:element minOccurs="0" ref="sources"/>
      <xsd:element minOccurs="0" ref="partnerLinks"/>
      <xsd:element minOccurs="0" ref="messageExchanges"/>
      <xsd:element minOccurs="0" ref="variables"/>
      <xsd:element minOccurs="0" ref="correlationSets"/>
      <xsd:element minOccurs="1" ref="faultHandlers"/>
      <xsd:element minOccurs="1" ref="compensationHandler"/>
      <xsd:element minOccurs="1" ref="terminationHandler"/>
      <xsd:element minOccurs="0" ref="eventHandlers"/>
      <xsd:group ref="activity"/>
    </xsd:sequence>
    <xsd:attribute use="required" type="tBoolean" name="suppressJoinFailure"/>
    <xsd:attribute type="xsd:NCName" name="name"/>
    <xsd:attribute default="no" type="tBoolean" name="isolated"/>
    <xsd:attribute use="required" type="tBoolean"
                   name="exitOnStandardFault"/>
  </xsd:complexType>
  <xsd:element type="tActivityContainer" name="compensationHandler">
    <xsd:annotation>
      <xsd:documentation>
        This element can contain all activities including the
        activities compensate and compensateScope.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element type="tActivityContainer" name="terminationHandler">
    <xsd:annotation>
      <xsd:documentation>
        This element can contain all activities including the
        activities compensate and compensateScope.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element type="tThrow" name="throw"/>
  <xsd:complexType name="tThrow">
    <xsd:attribute use="required" type="xsd:QName" name="faultName"/>
    <xsd:attribute type="BPELVariableName" name="faultVariable"/>
  </xsd:complexType>
  <xsd:element type="tValidate" name="validate"/>
  <xsd:complexType name="tValidate">
    <xsd:attribute use="required" type="BPELVariableNames"
                   name="variables"/>
  </xsd:complexType>
  <xsd:simpleType name="BPELVariableNames">
    <xsd:restriction>
      <xsd:simpleType>
        <xsd:list itemType="BPELVariableName"/>
      </xsd:simpleType>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element type="tWait" name="wait"/>
  <xsd:complexType name="tWait">
    <xsd:choice>
      <xsd:element ref="for"/>
      <xsd:element ref="until"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="tExpression">
    <xsd:simpleContent>
      <xsd:extension base="xpath">
        <xsd:attribute fixed="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                       type="xsd:anyURI" name="expressionLanguage"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="tCondition">
    <xsd:simpleContent>
      <xsd:extension base="tExpression"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element type="tBoolean-expr" name="condition"/>
  <xsd:complexType name="tBoolean-expr">
    <xsd:simpleContent>
      <xsd:extension base="tExpression"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="tDuration-expr">
    <xsd:simpleContent>
      <xsd:extension base="tExpression"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="tDeadline-expr">
    <xsd:simpleContent>
      <xsd:extension base="tExpression"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="tBoolean">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="yes"/>
      <xsd:enumeration value="no"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="xpath">
    <xsd:restriction base="xsd:normalizedString"/>
  </xsd:simpleType>
</xsd:schema>